clear all;clc;global R2strich = 3.19;global X2strich = 9.74;global Z2strich = R2strich + j * X2strich;global R1 = 0.077;global X2 = 6.28;global Z1 = R1 + j * X2;global XMstrich = 1413.7;global ratio = 10 / 0.4;global U_Zstrich = 10 * 10^3 / sqrt(3);#Z = 350*10^(-3) + <(330 * 10^(-3))*j#Z = 350*10^(-3)#Z = j*330*10^(-3)global Z = 350*10^(-3) - (330 * 10^(-3))*j;global reZ = (0:1:2000).*10^-3;global imZ = (-1000:1:1000).*10^-3;Zvec = reZ + j.*imZ;#====================================function U1 = getU1 (Z)  global R2strich  global X2strich  global Z2strich  global R1  global X2  global Z1;  global XMstrich;  global ratio;  global U_Zstrich;  global reZ;  global imZ;  Zstrich   = Z .* ratio^2;  I2strich  = U_Zstrich ./ Zstrich;  U_Z2      = I2strich .* Z2strich;  U_Mstrich = U_Z2 + U_Zstrich;  I1        = U_Mstrich ./ (j * XMstrich) + I2strich; # !!  U1        = I1 .* Z1 + U_Mstrich;endfunctiontx  = linspace (0, 0.35, 300)';ty  = linspace (0, 0.35, 300)';[xx, yy] = meshgrid (tx, ty);tz       = getU1(xx+j.*yy);mesh (tx, ty, abs(tz));zlim([-1000, 10000])#mesh (reZ, imZ, abs(U1vec));#abs(U1);#rad2deg(angle(U1));#axis equal;#grid on;